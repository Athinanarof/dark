[test.dbnullroundtrip] with DB MyDB { "x" : "Str" }
(let old = { x = null } in
 let key = DB.add_v0 old MyDB in
 DB.get_v1_ster key MyDB) = { x = null }

[test.query_v1_works] with DB MyDB { "x" : "Str", "y": "Str" }
(let dontfind = DB.set_v1 {x = "foo"; y = "bar" } "hello" MyDB in
 let hopetofind = DB.set_v1 { x = "bar"; y = "foo" } "findme" MyDB in
 let results = DB.query_v1 { x = "bar" } MyDB in
 results == [["findme"; hopetofind]]) = true

[test.query_v2_works] with DB MyDB { "x" : "Str", "y": "Str" }
(let dontfind = DB.set_v1 {x = "foo"; y = "bar" } "hello" MyDB in
 let hopetofind = DB.set_v1 { x = "bar"; y = "foo" } "findme" MyDB in
 let results = DB.query_v2 { x = "bar" } MyDB in
 results == [hopetofind]) = true

[test.query_v3_works] with DB MyDB { "x" : "Str", "y": "Str" }
(let dontfind = DB.set_v1 {x = "foo"; y = "bar" } "hello" MyDB in
 let hopetofind = DB.set_v1 { x = "bar"; y = "foo" } "findme" MyDB in
 let results = DB.query_v3 { x = "bar" } MyDB in
 results == [hopetofind]) = true

[test.db set does upsert] with DB MyDB { "x" : "Str" }
(let old = DB.set_v1 { x = "foo" } "hello" MyDB in
 let newval = DB.set_v1 { x = "bar" } "hello" MyDB in
 DB.getAllWithKeys_v1 MyDB == [["hello"; newval]]) = true


[test.db.getAllWithKeys_v1 works] with DB MyDB { "x" : "Str" }
(let one = DB.set_v1 { x = "foo" } "one" MyDB in
 let two = DB.set_v1 { x = "bar" } "two" MyDB in
 DB.getAllWithKeys_v1 MyDB == [["one", one];["two"; two]]) = true

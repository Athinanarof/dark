#!/usr/bin/env bash
. ./scripts/support/assert-in-container "$0" "${@}"

set -euo pipefail

# Build the docker containers for the services we run on GCP

PREFIX=""

for i in "$@"
do
  case "${i}" in
    --prefix=*)
      PREFIX="${i/--prefix=/''}-"
      ;;
    *)
      echo "Unexpected argument: $i"
      exit 1
      ;;
  esac
done

GIT_COMMIT=$(git rev-parse --short HEAD)

# Build the base ocaml docker image ('-' means no build context)
echo -e "\nBuild dark-base-service container"
docker build \
  --build-arg GIT_COMMIT="${GIT_COMMIT}" \
  --tag "dark-base-service:latest" \
  - \
  < containers/base-service-Dockerfile

# Build the base ocaml docker image ('-' means no build context)
echo -e "\nBuild dark-ocaml-service container"
docker build \
  --build-arg GIT_COMMIT="${GIT_COMMIT}" \
  --tag "dark-ocaml-service:latest" \
  - \
  < containers/ocaml-service-Dockerfile

# Build all the directories in containers/. Each one has a prep.sh file which
# readies a directory and echoes it back. We then build the dockerfile in that
# directory.
for dir in containers/*/; do
  c=$(basename $dir)
  echo -e "\nBuild container: $c"
  BUILD_DIR=$(${dir}prep.sh)
  ( cd $BUILD_DIR \
    && echo "Building in $BUILD_DIR" \
    && docker build \
         --tag "${PREFIX}${c}:latest" \
         .
    )
done
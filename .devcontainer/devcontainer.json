{
  "name": "Existing Dockerfile",

  // Sets the run context to one level up instead of the .devcontainer folder.
  "context": "..",

  // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
  "image": "dark",

  // Set *default* container specific settings.json values on container create.
  "settings": {
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ionide.ionide-fsharp",
    "shuumatsu.vscode-ocamlformat",
    "esbenp.prettier-vscode",
    "ms-python.python",
    "matklad.rust-analyzer"
  ],
  /* "extensions": [ "ms-azuretools.vscode-docker", "bungcip.better-toml", "golang.go", ], */

  // Ports are loaded in the build process
  // "forwardPorts": [],

  // Uncomment the next line to run commands after the container is created - for example installing curl.
  // "postCreateCommand": "apt-get update && apt-get install -y curl",

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

  // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}
